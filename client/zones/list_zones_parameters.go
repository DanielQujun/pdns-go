// Code generated by go-swagger; DO NOT EDIT.

package zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListZonesParams creates a new ListZonesParams object
// with the default values initialized.
func NewListZonesParams() *ListZonesParams {
	var ()
	return &ListZonesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListZonesParamsWithTimeout creates a new ListZonesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListZonesParamsWithTimeout(timeout time.Duration) *ListZonesParams {
	var ()
	return &ListZonesParams{

		timeout: timeout,
	}
}

// NewListZonesParamsWithContext creates a new ListZonesParams object
// with the default values initialized, and the ability to set a context for a request
func NewListZonesParamsWithContext(ctx context.Context) *ListZonesParams {
	var ()
	return &ListZonesParams{

		Context: ctx,
	}
}

// NewListZonesParamsWithHTTPClient creates a new ListZonesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListZonesParamsWithHTTPClient(client *http.Client) *ListZonesParams {
	var ()
	return &ListZonesParams{
		HTTPClient: client,
	}
}

/*ListZonesParams contains all the parameters to send to the API endpoint
for the list zones operation typically these are written to a http.Request
*/
type ListZonesParams struct {

	/*ServerID
	  The id of the server to retrieve

	*/
	ServerID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list zones params
func (o *ListZonesParams) WithTimeout(timeout time.Duration) *ListZonesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list zones params
func (o *ListZonesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list zones params
func (o *ListZonesParams) WithContext(ctx context.Context) *ListZonesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list zones params
func (o *ListZonesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list zones params
func (o *ListZonesParams) WithHTTPClient(client *http.Client) *ListZonesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list zones params
func (o *ListZonesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithServerID adds the serverID to the list zones params
func (o *ListZonesParams) WithServerID(serverID string) *ListZonesParams {
	o.SetServerID(serverID)
	return o
}

// SetServerID adds the serverId to the list zones params
func (o *ListZonesParams) SetServerID(serverID string) {
	o.ServerID = serverID
}

// WriteToRequest writes these params to a swagger request
func (o *ListZonesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param server_id
	if err := r.SetPathParam("server_id", o.ServerID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
